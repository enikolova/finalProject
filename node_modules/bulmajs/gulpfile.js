var _ = require('lodash')
var gulp = require('gulp')
var sass = require('gulp-sass')
var _webpack = require('webpack')
var webpack = require('gulp-webpack')
var webpackConfig = require('./webpack.config.js')
var rename = require('gulp-rename')

// Normals tasks
gulp.task('scss', function(){
  gulp.src(['./src/scss/build.scss'])
    .pipe(sass().on('error', sass.logError))
    .pipe(rename({ basename: 'bulmajs' }))
    .pipe(gulp.dest('./build'))
})

gulp.task('js', function(){
  gulp.src('./src/index.js')
    .pipe(webpack(webpackConfig))
    .pipe(gulp.dest('./build/'))
})

gulp.task('js-single', function(){
  const _webpackConfig = _.clone(webpackConfig)
  _webpackConfig.plugins = [new _webpack.optimize.UglifyJsPlugin()]
  _webpackConfig.output.filename = 'single.min.js'

  gulp.src('./src/single.js')
    .pipe(webpack(_webpackConfig))
    .pipe(gulp.dest('./build/'))
})

// Build tasks
gulp.task('scss-build', function(){
  gulp.src(['./src/scss/build.scss'])
    .pipe(sass({ outputStyle: 'compressed' }).on('error', sass.logError))
    .pipe(rename({ basename: 'bulmajs', suffix: '.min' }))
    .pipe(gulp.dest('./build'))
})

gulp.task('js-build', function(){
  const _webpackConfig = _.clone(webpackConfig)
  _webpackConfig.plugins = [new _webpack.optimize.UglifyJsPlugin()]
  _webpackConfig.output.filename = 'bulmajs.min.js'

  gulp.src('./src/index.js')
    .pipe(webpack(_webpackConfig))
    .pipe(gulp.dest('./build/'))
})

gulp.task('default', ['scss', 'js'])
gulp.task('single', ['js-single'])
gulp.task('build', ['scss-build', 'js-build'])
